.row.expanded
  .large-9.columns.calendar_outer_frame
    = render partial: 'layouts/cities_header'
    .row
      .large-12.columns.banner_ad this is an ad
    .row
      .large-12.columns.the_calendar
        %nav
          %ul.event_categories
            %li.month_title= params[:year].to_s + "/" + I18n.t("date.month_names")[params[:month]]
            - @eventcategories.each do |ec|
              %li= link_to ec.name, '#'
        #calendar
  
-# = link_to image_tag(entry.calendar_icon(:thumb, nil)), ctcalendar_path(:year => key, :month => k)


= content_for :jquery do 
  :plain
    function renderViewColumns(view, element) {
      element.find('th.fc-day-header.fc-widget-header').each(function() {
        var theDate = moment($(this).data('date')); /* th.data-date="YYYY-MM-DD" */
        $(this).html(buildDateColumnHeader(theDate));
      });

      function buildDateColumnHeader(theDate) {
        var container = document.createElement('div');
        var DDD = document.createElement('div');
        var ddMMM = document.createElement('div');
        DDD.textContent = theDate.format('D').toUpperCase();
        ddMMM.textContent = theDate.format('dddd');
        DDD.className = "ct-day";
        container.appendChild(DDD);
        container.appendChild(ddMMM);
        return container;
      }
    }
    
      $('#calendar').fullCalendar({
            editable: true,
            header: {
              left: ''
            },
            defaultView: 'basicWeek',
            contentHeight: '400px',
            lang: '#{I18n.locale.to_s}',
            contentHeight: 'auto',
            firstDay: 1,
            viewRender: renderViewColumns,
            views: {
              week: {
                columnFormat: 'd\n<span class="weekday">dddd</span>'
              }
            },
            fixedWeekCount: false,
            slotMinutes: 60,
            eventBorderColor: 'green',
            eventSources: [
              {
                url: '/calendar'
              }
            ],
            timeFormat: 'H:mm',
            dragOpacity: "0.5",
            eventDrop: function(event, dayDelta, minuteDelta, allDay, revertFunc) {
              return updateEvent(event);
            },
            
            eventResize: function(event, dayDelta, minuteDelta, revertFunc) {
              return updateEvent(event);
            },
            eventRender: function(event, element, view) {
                if (view.name === "basicWeek") {

                    element.find(".fc-content")
                        .append("<br />" + event.notes + event.promoter +  event.place);
                }
            }
          });


        updateEvent = function(the_event) {

          return $.update("/calendar/" + the_event.id, {
            event: {
              title: the_event.title,
              notes: the_event.notes,
              promoter: the_event.promoter,
              place: the_event.place,
              starts_at: "" + the_event.start,
              ends_at: "" + the_event.end,
              description: the_event.description
            }
          });
        };

