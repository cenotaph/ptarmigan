%p
  = t "kuulutused.tagline"
  = link_to t("kuulutused.submit"), 'javascript:void(0);', :onClick => "$('#big_map').css('width', '75%');$('#big_map').css('float', 'left');$('#infobox').css('display', 'block');$('#infobox').load('/places/new');"
  


#big_map= gmaps(:map_options => {:raw => "{styles: myStyle}" },  "markers" => { "data" => @json, "options" => {"auto_zoom" => true, "auto_adjust" => true}  })
.three.columns
  #message
  #infobox

  
= content_for :scripts do
  :javascript
    function onMarkerClick(marker, event){
      return function(event){
        $('#infobox').load("/places/" + marker.id);
      }
    }
    var myStyle = [ 
      { featureType: "all", stylers: [ { weight: 1.7}, 
         { "hue": "#00bbff"}, { saturation: -9 },
      { lightness: 14}, {gamma: 0.42}] }
        
    ];
    
    Gmaps.map.listen_to_markers = function(markers){
      for(var i = 0; i < markers.length; i++){
        marker = markers[i];
        var the_id = markers[i].id;
        google.maps.event.addListener(marker.serviceObject, 'click', onMarkerClick(marker, event));
        google.maps.event.addListener(marker.serviceObject, 'click', function() {
          
          $('#big_map').css('width', '75%');
          $('#big_map').css('float', 'left');
     
          $('#infobox').css('display', 'block');
          
        });
      }
    }

    Gmaps.map.callback = function(){
      Gmaps.map.listen_to_markers(Gmaps.map.markers);
    }

